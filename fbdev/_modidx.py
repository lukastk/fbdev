# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/fbdev',
                'doc_host': 'https://lukastk.github.io',
                'git_url': 'https://github.com/lukastk/fbdev',
                'lib_path': 'fbdev'},
  'syms': { 'fbdev.component': { 'fbdev.component.BaseComponent': ('api/component.html#basecomponent', 'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.__init__': ( 'api/component.html#basecomponent.__init__',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.__init_subclass__': ( 'api/component.html#basecomponent.__init_subclass__',
                                                                                      'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.check_configured': ( 'api/component.html#basecomponent.check_configured',
                                                                                     'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.execute': ( 'api/component.html#basecomponent.execute',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.set_config': ( 'api/component.html#basecomponent.set_config',
                                                                               'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.update_config': ( 'api/component.html#basecomponent.update_config',
                                                                                  'fbdev/component.py'),
                                 'fbdev.component.BasePort': ('api/component.html#baseport', 'fbdev/component.py'),
                                 'fbdev.component.BasePort.__init__': ('api/component.html#baseport.__init__', 'fbdev/component.py'),
                                 'fbdev.component.BasePort.__repr__': ('api/component.html#baseport.__repr__', 'fbdev/component.py'),
                                 'fbdev.component.BasePort.__str__': ('api/component.html#baseport.__str__', 'fbdev/component.py'),
                                 'fbdev.component.BasePort._validate_packet': ( 'api/component.html#baseport._validate_packet',
                                                                                'fbdev/component.py'),
                                 'fbdev.component.BasePort._validate_packet_dtype': ( 'api/component.html#baseport._validate_packet_dtype',
                                                                                      'fbdev/component.py'),
                                 'fbdev.component.BasePort.data_validator': ( 'api/component.html#baseport.data_validator',
                                                                              'fbdev/component.py'),
                                 'fbdev.component.BasePort.dtype': ('api/component.html#baseport.dtype', 'fbdev/component.py'),
                                 'fbdev.component.BasePort.idx': ('api/component.html#baseport.idx', 'fbdev/component.py'),
                                 'fbdev.component.BasePort.name': ('api/component.html#baseport.name', 'fbdev/component.py'),
                                 'fbdev.component.BasePort.parent': ('api/component.html#baseport.parent', 'fbdev/component.py'),
                                 'fbdev.component.BasePort.port_type': ('api/component.html#baseport.port_type', 'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec': ('api/component.html#configportspec', 'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec.__init__': ( 'api/component.html#configportspec.__init__',
                                                                              'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec.data_validator': ( 'api/component.html#configportspec.data_validator',
                                                                                    'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec.default': ( 'api/component.html#configportspec.default',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec.dtype': ('api/component.html#configportspec.dtype', 'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec.has_default': ( 'api/component.html#configportspec.has_default',
                                                                                 'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec.is_optional': ( 'api/component.html#configportspec.is_optional',
                                                                                 'fbdev/component.py'),
                                 'fbdev.component.ConfigPortSpec.name': ('api/component.html#configportspec.name', 'fbdev/component.py'),
                                 'fbdev.component.InputPort': ('api/component.html#inputport', 'fbdev/component.py'),
                                 'fbdev.component.InputPort.__init__': ('api/component.html#inputport.__init__', 'fbdev/component.py'),
                                 'fbdev.component.InputPort._load_packet': ( 'api/component.html#inputport._load_packet',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.InputPort.receive': ('api/component.html#inputport.receive', 'fbdev/component.py'),
                                 'fbdev.component.InputPort.receive_payload': ( 'api/component.html#inputport.receive_payload',
                                                                                'fbdev/component.py'),
                                 'fbdev.component.OutputPort': ('api/component.html#outputport', 'fbdev/component.py'),
                                 'fbdev.component.OutputPort.__init__': ('api/component.html#outputport.__init__', 'fbdev/component.py'),
                                 'fbdev.component.OutputPort._unload_packet': ( 'api/component.html#outputport._unload_packet',
                                                                                'fbdev/component.py'),
                                 'fbdev.component.OutputPort.put': ('api/component.html#outputport.put', 'fbdev/component.py'),
                                 'fbdev.component.OutputPort.put_payload': ( 'api/component.html#outputport.put_payload',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.PortCollection': ('api/component.html#portcollection', 'fbdev/component.py'),
                                 'fbdev.component.PortCollection.__init__': ( 'api/component.html#portcollection.__init__',
                                                                              'fbdev/component.py'),
                                 'fbdev.component.PortCollection.__iter__': ( 'api/component.html#portcollection.__iter__',
                                                                              'fbdev/component.py'),
                                 'fbdev.component.PortCollection.__str__': ( 'api/component.html#portcollection.__str__',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.PortCollection._attach_ports': ( 'api/component.html#portcollection._attach_ports',
                                                                                   'fbdev/component.py'),
                                 'fbdev.component.PortCollection.config': ( 'api/component.html#portcollection.config',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.PortCollection.input': ('api/component.html#portcollection.input', 'fbdev/component.py'),
                                 'fbdev.component.PortCollection.output': ( 'api/component.html#portcollection.output',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.PortCollection.signal': ( 'api/component.html#portcollection.signal',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.PortSpec': ('api/component.html#portspec', 'fbdev/component.py'),
                                 'fbdev.component.PortSpec.__init__': ('api/component.html#portspec.__init__', 'fbdev/component.py'),
                                 'fbdev.component.PortSpec.__repr__': ('api/component.html#portspec.__repr__', 'fbdev/component.py'),
                                 'fbdev.component.PortSpec.__str__': ('api/component.html#portspec.__str__', 'fbdev/component.py'),
                                 'fbdev.component.PortSpec.data_validator': ( 'api/component.html#portspec.data_validator',
                                                                              'fbdev/component.py'),
                                 'fbdev.component.PortSpec.dtype': ('api/component.html#portspec.dtype', 'fbdev/component.py'),
                                 'fbdev.component.PortSpec.has_data_validator': ( 'api/component.html#portspec.has_data_validator',
                                                                                  'fbdev/component.py'),
                                 'fbdev.component.PortSpec.has_dtype': ('api/component.html#portspec.has_dtype', 'fbdev/component.py'),
                                 'fbdev.component.PortSpec.is_input_port': ( 'api/component.html#portspec.is_input_port',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.PortSpec.name': ('api/component.html#portspec.name', 'fbdev/component.py'),
                                 'fbdev.component.PortSpec.port_type': ('api/component.html#portspec.port_type', 'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection': ('api/component.html#portspeccollection', 'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection.__init__': ( 'api/component.html#portspeccollection.__init__',
                                                                                  'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection.__iter__': ( 'api/component.html#portspeccollection.__iter__',
                                                                                  'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection.__str__': ( 'api/component.html#portspeccollection.__str__',
                                                                                 'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection.config': ( 'api/component.html#portspeccollection.config',
                                                                                'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection.input': ( 'api/component.html#portspeccollection.input',
                                                                               'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection.output': ( 'api/component.html#portspeccollection.output',
                                                                                'fbdev/component.py'),
                                 'fbdev.component.PortSpecCollection.signal': ( 'api/component.html#portspeccollection.signal',
                                                                                'fbdev/component.py'),
                                 'fbdev.component.PortType': ('api/component.html#porttype', 'fbdev/component.py'),
                                 'fbdev.component.PortType.__init__': ('api/component.html#porttype.__init__', 'fbdev/component.py'),
                                 'fbdev.component.PortType.is_input_port': ( 'api/component.html#porttype.is_input_port',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.PortType.label': ('api/component.html#porttype.label', 'fbdev/component.py'),
                                 'fbdev.component.PortTypeSpec': ('api/component.html#porttypespec', 'fbdev/component.py'),
                                 'fbdev.component.PortTypeSpec.__init__': ( 'api/component.html#porttypespec.__init__',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.PortTypeSpec.__repr__': ( 'api/component.html#porttypespec.__repr__',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.PortTypeSpec.__str__': ('api/component.html#porttypespec.__str__', 'fbdev/component.py'),
                                 'fbdev.component.PortTypeSpec._initialise': ( 'api/component.html#porttypespec._initialise',
                                                                               'fbdev/component.py'),
                                 'fbdev.component.PortTypeSpec.is_input_port': ( 'api/component.html#porttypespec.is_input_port',
                                                                                 'fbdev/component.py'),
                                 'fbdev.component.PortTypeSpec.port_type': ( 'api/component.html#porttypespec.port_type',
                                                                             'fbdev/component.py')},
            'fbdev.graph': { 'fbdev.graph.EdgeSpec': ('api/graph.html#edgespec', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.__init__': ('api/graph.html#edgespec.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec._clear_head': ('api/graph.html#edgespec._clear_head', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec._clear_tail': ('api/graph.html#edgespec._clear_tail', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec._set_head': ('api/graph.html#edgespec._set_head', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec._set_tail': ('api/graph.html#edgespec._set_tail', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.attached': ('api/graph.html#edgespec.attached', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.head_is_connected': ('api/graph.html#edgespec.head_is_connected', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.head_is_connected_to_graph': ( 'api/graph.html#edgespec.head_is_connected_to_graph',
                                                                                  'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.head_port_name': ('api/graph.html#edgespec.head_port_name', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.head_port_type': ('api/graph.html#edgespec.head_port_type', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.head_target': ('api/graph.html#edgespec.head_target', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.id': ('api/graph.html#edgespec.id', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.is_connected_to_graph': ( 'api/graph.html#edgespec.is_connected_to_graph',
                                                                             'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.tail_is_connected': ('api/graph.html#edgespec.tail_is_connected', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.tail_is_connected_to_graph': ( 'api/graph.html#edgespec.tail_is_connected_to_graph',
                                                                                  'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.tail_port_name': ('api/graph.html#edgespec.tail_port_name', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.tail_port_type': ('api/graph.html#edgespec.tail_port_type', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.tail_target': ('api/graph.html#edgespec.tail_target', 'fbdev/graph.py'),
                             'fbdev.graph.Graph': ('api/graph.html#graph', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.__init__': ('api/graph.html#graph.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.Graph._check_edge': ('api/graph.html#graph._check_edge', 'fbdev/graph.py'),
                             'fbdev.graph.Graph._check_node': ('api/graph.html#graph._check_node', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.add_edge': ('api/graph.html#graph.add_edge', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.add_graph_port': ('api/graph.html#graph.add_graph_port', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.add_node': ('api/graph.html#graph.add_node', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.connect_edge_to_graph_port': ( 'api/graph.html#graph.connect_edge_to_graph_port',
                                                                               'fbdev/graph.py'),
                             'fbdev.graph.Graph.connect_edge_to_node': ('api/graph.html#graph.connect_edge_to_node', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.copy': ('api/graph.html#graph.copy', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.disconnect_edge_from_graph_port': ( 'api/graph.html#graph.disconnect_edge_from_graph_port',
                                                                                    'fbdev/graph.py'),
                             'fbdev.graph.Graph.disconnect_edge_from_node': ( 'api/graph.html#graph.disconnect_edge_from_node',
                                                                              'fbdev/graph.py'),
                             'fbdev.graph.Graph.edges': ('api/graph.html#graph.edges', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.graph_port_connections': ('api/graph.html#graph.graph_port_connections', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.graph_port_specs': ('api/graph.html#graph.graph_port_specs', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.nodes': ('api/graph.html#graph.nodes', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.remove_edge': ('api/graph.html#graph.remove_edge', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.remove_graph_port': ('api/graph.html#graph.remove_graph_port', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.remove_node': ('api/graph.html#graph.remove_node', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec': ('api/graph.html#nodespec', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.__init__': ('api/graph.html#nodespec.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.attached_to_graph': ('api/graph.html#nodespec.attached_to_graph', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.component_type': ('api/graph.html#nodespec.component_type', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.id': ('api/graph.html#nodespec.id', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.port_connections': ('api/graph.html#nodespec.port_connections', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph': ('api/graph.html#readonlygraph', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.__init__': ('api/graph.html#readonlygraph.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.copy': ('api/graph.html#readonlygraph.copy', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.edges': ('api/graph.html#readonlygraph.edges', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.graph_port_connections': ( 'api/graph.html#readonlygraph.graph_port_connections',
                                                                                   'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.graph_port_specs': ( 'api/graph.html#readonlygraph.graph_port_specs',
                                                                             'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.nodes': ('api/graph.html#readonlygraph.nodes', 'fbdev/graph.py')},
            'fbdev.net': { 'fbdev.net.Edge': ('api/net.html#edge', 'fbdev/net.py'),
                           'fbdev.net.Edge.__init__': ('api/net.html#edge.__init__', 'fbdev/net.py'),
                           'fbdev.net.Edge._load': ('api/net.html#edge._load', 'fbdev/net.py'),
                           'fbdev.net.Edge._load_left': ('api/net.html#edge._load_left', 'fbdev/net.py'),
                           'fbdev.net.Edge._unload': ('api/net.html#edge._unload', 'fbdev/net.py'),
                           'fbdev.net.Edge._unload_all': ('api/net.html#edge._unload_all', 'fbdev/net.py'),
                           'fbdev.net.Edge._unload_right': ('api/net.html#edge._unload_right', 'fbdev/net.py'),
                           'fbdev.net.Edge._update_status_events': ('api/net.html#edge._update_status_events', 'fbdev/net.py'),
                           'fbdev.net.Edge.head_node': ('api/net.html#edge.head_node', 'fbdev/net.py'),
                           'fbdev.net.Edge.id': ('api/net.html#edge.id', 'fbdev/net.py'),
                           'fbdev.net.Edge.is_empty': ('api/net.html#edge.is_empty', 'fbdev/net.py'),
                           'fbdev.net.Edge.is_enabled': ('api/net.html#edge.is_enabled', 'fbdev/net.py'),
                           'fbdev.net.Edge.is_full': ('api/net.html#edge.is_full', 'fbdev/net.py'),
                           'fbdev.net.Edge.maxsize': ('api/net.html#edge.maxsize', 'fbdev/net.py'),
                           'fbdev.net.Edge.num_packets': ('api/net.html#edge.num_packets', 'fbdev/net.py'),
                           'fbdev.net.Edge.tail_node': ('api/net.html#edge.tail_node', 'fbdev/net.py'),
                           'fbdev.net.Net': ('api/net.html#net', 'fbdev/net.py'),
                           'fbdev.net.Net.__init__': ('api/net.html#net.__init__', 'fbdev/net.py'),
                           'fbdev.net.Net._add_net_port': ('api/net.html#net._add_net_port', 'fbdev/net.py'),
                           'fbdev.net.Net._get_edge_from_spec': ('api/net.html#net._get_edge_from_spec', 'fbdev/net.py'),
                           'fbdev.net.Net._get_port_from_spec': ('api/net.html#net._get_port_from_spec', 'fbdev/net.py'),
                           'fbdev.net.Net._setup_net': ('api/net.html#net._setup_net', 'fbdev/net.py'),
                           'fbdev.net.Net.graph': ('api/net.html#net.graph', 'fbdev/net.py'),
                           'fbdev.net.Node': ('api/net.html#node', 'fbdev/net.py'),
                           'fbdev.net.Node.__del__': ('api/net.html#node.__del__', 'fbdev/net.py'),
                           'fbdev.net.Node.__init__': ('api/net.html#node.__init__', 'fbdev/net.py'),
                           'fbdev.net.Node._get_edge_ids': ('api/net.html#node._get_edge_ids', 'fbdev/net.py'),
                           'fbdev.net.Node._get_in_edge_ids': ('api/net.html#node._get_in_edge_ids', 'fbdev/net.py'),
                           'fbdev.net.Node._get_out_edge_ids': ('api/net.html#node._get_out_edge_ids', 'fbdev/net.py'),
                           'fbdev.net.Node._initialise': ('api/net.html#node._initialise', 'fbdev/net.py'),
                           'fbdev.net.Node._start_edge_bus': ('api/net.html#node._start_edge_bus', 'fbdev/net.py'),
                           'fbdev.net.Node._stop_edge_bus': ('api/net.html#node._stop_edge_bus', 'fbdev/net.py'),
                           'fbdev.net.Node.component_process': ('api/net.html#node.component_process', 'fbdev/net.py'),
                           'fbdev.net.Node.component_type': ('api/net.html#node.component_type', 'fbdev/net.py'),
                           'fbdev.net.Node.events': ('api/net.html#node.events', 'fbdev/net.py'),
                           'fbdev.net.Node.id': ('api/net.html#node.id', 'fbdev/net.py'),
                           'fbdev.net.Node.node_spec': ('api/net.html#node.node_spec', 'fbdev/net.py'),
                           'fbdev.net.Node.parent_net': ('api/net.html#node.parent_net', 'fbdev/net.py'),
                           'fbdev.net.Node.run': ('api/net.html#node.run', 'fbdev/net.py'),
                           'fbdev.net.Node.states': ('api/net.html#node.states', 'fbdev/net.py'),
                           'fbdev.net.Node.stop': ('api/net.html#node.stop', 'fbdev/net.py'),
                           'fbdev.net._handle_component_config': ('api/net.html#_handle_component_config', 'fbdev/net.py'),
                           'fbdev.net._handle_edge_port_connection': ('api/net.html#_handle_edge_port_connection', 'fbdev/net.py')},
            'fbdev.packet': { 'fbdev.packet.NullPayload': ('api/packet.html#nullpayload', 'fbdev/packet.py'),
                              'fbdev.packet.NullPayload.__new__': ('api/packet.html#nullpayload.__new__', 'fbdev/packet.py'),
                              'fbdev.packet.NullPayload.__repr__': ('api/packet.html#nullpayload.__repr__', 'fbdev/packet.py'),
                              'fbdev.packet.Packet': ('api/packet.html#packet', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.__init__': ('api/packet.html#packet.__init__', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.consume': ('api/packet.html#packet.consume', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.consumed': ('api/packet.html#packet.consumed', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.dtype': ('api/packet.html#packet.dtype', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.get_deep_copy': ('api/packet.html#packet.get_deep_copy', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.get_empty': ('api/packet.html#packet.get_empty', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.is_empty': ('api/packet.html#packet.is_empty', 'fbdev/packet.py')},
            'fbdev.utils': { 'fbdev.utils.AttrContainer': ('api/utils.html#attrcontainer', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__contains__': ('api/utils.html#attrcontainer.__contains__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__getattr__': ('api/utils.html#attrcontainer.__getattr__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__getitem__': ('api/utils.html#attrcontainer.__getitem__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__init__': ('api/utils.html#attrcontainer.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__iter__': ('api/utils.html#attrcontainer.__iter__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__len__': ('api/utils.html#attrcontainer.__len__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__str__': ('api/utils.html#attrcontainer.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer._set': ('api/utils.html#attrcontainer._set', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.as_list': ('api/utils.html#attrcontainer.as_list', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.as_readonly_dict': ( 'api/utils.html#attrcontainer.as_readonly_dict',
                                                                             'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.items': ('api/utils.html#attrcontainer.items', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.keys': ('api/utils.html#attrcontainer.keys', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.values': ('api/utils.html#attrcontainer.values', 'fbdev/utils.py'),
                             'fbdev.utils.EventCollection': ('api/utils.html#eventcollection', 'fbdev/utils.py'),
                             'fbdev.utils.EventCollection.__init__': ('api/utils.html#eventcollection.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.EventCollection._add_event': ('api/utils.html#eventcollection._add_event', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler': ('api/utils.html#eventhandler', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.__init__': ('api/utils.html#eventhandler.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.__repr__': ('api/utils.html#eventhandler.__repr__', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.__str__': ('api/utils.html#eventhandler.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler._trigger': ('api/utils.html#eventhandler._trigger', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.subscribe': ('api/utils.html#eventhandler.subscribe', 'fbdev/utils.py'),
                             'fbdev.utils.StateCollection': ('api/utils.html#statecollection', 'fbdev/utils.py'),
                             'fbdev.utils.StateCollection.__init__': ('api/utils.html#statecollection.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.StateCollection._add_state': ('api/utils.html#statecollection._add_state', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler': ('api/utils.html#statehandler', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__event_func': ('api/utils.html#statehandler.__event_func', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__init__': ('api/utils.html#statehandler.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__repr__': ('api/utils.html#statehandler.__repr__', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__str__': ('api/utils.html#statehandler.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.check': ('api/utils.html#statehandler.check', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.get': ('api/utils.html#statehandler.get', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.get_state_event': ('api/utils.html#statehandler.get_state_event', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.get_state_toggle_event': ( 'api/utils.html#statehandler.get_state_toggle_event',
                                                                                  'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.set': ('api/utils.html#statehandler.set', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.wait': ('api/utils.html#statehandler.wait', 'fbdev/utils.py'),
                             'fbdev.utils.StateView': ('api/utils.html#stateview', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.__init__': ('api/utils.html#stateview.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.__repr__': ('api/utils.html#stateview.__repr__', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.__str__': ('api/utils.html#stateview.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.check': ('api/utils.html#stateview.check', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.get': ('api/utils.html#stateview.get', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.get_state_event': ('api/utils.html#stateview.get_state_event', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.get_state_toggle_event': ( 'api/utils.html#stateview.get_state_toggle_event',
                                                                               'fbdev/utils.py'),
                             'fbdev.utils.StateView.wait': ('api/utils.html#stateview.wait', 'fbdev/utils.py'),
                             'fbdev.utils.await_multiple_events': ('api/utils.html#await_multiple_events', 'fbdev/utils.py')}}}
