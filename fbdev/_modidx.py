# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/fbdev',
                'doc_host': 'https://lukastk.github.io',
                'git_url': 'https://github.com/lukastk/fbdev',
                'lib_path': 'fbdev'},
  'syms': { 'fbdev.component': { 'fbdev.component.BaseComponent': ('api/component.html#basecomponent', 'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.__init__': ( 'api/component.html#basecomponent.__init__',
                                                                             'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.__init_subclass__': ( 'api/component.html#basecomponent.__init_subclass__',
                                                                                      'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.check_configured': ( 'api/component.html#basecomponent.check_configured',
                                                                                     'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.consume_packet': ( 'api/component.html#basecomponent.consume_packet',
                                                                                   'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.create_packet': ( 'api/component.html#basecomponent.create_packet',
                                                                                  'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.destroy': ( 'api/component.html#basecomponent.destroy',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.execute': ( 'api/component.html#basecomponent.execute',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.is_from_factory': ( 'api/component.html#basecomponent.is_from_factory',
                                                                                    'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.set_config': ( 'api/component.html#basecomponent.set_config',
                                                                               'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.start_background_tasks': ( 'api/component.html#basecomponent.start_background_tasks',
                                                                                           'fbdev/component.py'),
                                 'fbdev.component.BaseComponent.stop_background_tasks': ( 'api/component.html#basecomponent.stop_background_tasks',
                                                                                          'fbdev/component.py'),
                                 'fbdev.component.ComponentFactory': ('api/component.html#componentfactory', 'fbdev/component.py'),
                                 'fbdev.component.ComponentFactory.__init_subclass__': ( 'api/component.html#componentfactory.__init_subclass__',
                                                                                         'fbdev/component.py'),
                                 'fbdev.component.ComponentFactory._create_component_class': ( 'api/component.html#componentfactory._create_component_class',
                                                                                               'fbdev/component.py'),
                                 'fbdev.component.ComponentFactory.get_component': ( 'api/component.html#componentfactory.get_component',
                                                                                     'fbdev/component.py'),
                                 'fbdev.component.DummyComponentFactory': ( 'api/component.html#dummycomponentfactory',
                                                                            'fbdev/component.py'),
                                 'fbdev.component.DummyComponentFactory.execute': ( 'api/component.html#dummycomponentfactory.execute',
                                                                                    'fbdev/component.py'),
                                 'fbdev.component.DummyComponentFactory.get_component': ( 'api/component.html#dummycomponentfactory.get_component',
                                                                                          'fbdev/component.py'),
                                 'fbdev.component.FunctionComponentFactory': ( 'api/component.html#functioncomponentfactory',
                                                                               'fbdev/component.py'),
                                 'fbdev.component.FunctionComponentFactory.__init__': ( 'api/component.html#functioncomponentfactory.__init__',
                                                                                        'fbdev/component.py'),
                                 'fbdev.component.FunctionComponentFactory.execute': ( 'api/component.html#functioncomponentfactory.execute',
                                                                                       'fbdev/component.py'),
                                 'fbdev.component.FunctionComponentFactory.get_component': ( 'api/component.html#functioncomponentfactory.get_component',
                                                                                             'fbdev/component.py'),
                                 'fbdev.component.func_component': ('api/component.html#func_component', 'fbdev/component.py')},
            'fbdev.dev': { 'fbdev.dev.comp_execute_from_py_file': ('api/dev.html#comp_execute_from_py_file', 'fbdev/dev.py'),
                           'fbdev.dev.enter_node_execution': ('api/dev.html#enter_node_execution', 'fbdev/dev.py'),
                           'fbdev.dev.get_component_execute_from_py_file': ( 'api/dev.html#get_component_execute_from_py_file',
                                                                             'fbdev/dev.py'),
                           'fbdev.dev.save_graph_execution_cache': ('api/dev.html#save_graph_execution_cache', 'fbdev/dev.py')},
            'fbdev.exceptions': { 'fbdev.exceptions.BusError': ('api/exceptions.html#buserror', 'fbdev/exceptions.py'),
                                  'fbdev.exceptions.ComponentBackgroundProcessError': ( 'api/exceptions.html#componentbackgroundprocesserror',
                                                                                        'fbdev/exceptions.py'),
                                  'fbdev.exceptions.ComponentError': ('api/exceptions.html#componenterror', 'fbdev/exceptions.py'),
                                  'fbdev.exceptions.ComponentError.__init__': ( 'api/exceptions.html#componenterror.__init__',
                                                                                'fbdev/exceptions.py'),
                                  'fbdev.exceptions.ComponentExecutionError': ( 'api/exceptions.html#componentexecutionerror',
                                                                                'fbdev/exceptions.py'),
                                  'fbdev.exceptions.FBRuntimeError': ('api/exceptions.html#fbruntimeerror', 'fbdev/exceptions.py'),
                                  'fbdev.exceptions.FBRuntimeError.__init__': ( 'api/exceptions.html#fbruntimeerror.__init__',
                                                                                'fbdev/exceptions.py'),
                                  'fbdev.exceptions.LostPacketError': ('api/exceptions.html#lostpacketerror', 'fbdev/exceptions.py'),
                                  'fbdev.exceptions.LostPacketError.__init__': ( 'api/exceptions.html#lostpacketerror.__init__',
                                                                                 'fbdev/exceptions.py'),
                                  'fbdev.exceptions.NodeError': ('api/exceptions.html#nodeerror', 'fbdev/exceptions.py'),
                                  'fbdev.exceptions.NodeError.__init__': ('api/exceptions.html#nodeerror.__init__', 'fbdev/exceptions.py')},
            'fbdev.graph': { 'fbdev.graph.EdgeSpec': ('api/graph.html#edgespec', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.__init__': ('api/graph.html#edgespec.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.copy': ('api/graph.html#edgespec.copy', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.finite_maxsize': ('api/graph.html#edgespec.finite_maxsize', 'fbdev/graph.py'),
                             'fbdev.graph.EdgeSpec.id': ('api/graph.html#edgespec.id', 'fbdev/graph.py'),
                             'fbdev.graph.Graph': ('api/graph.html#graph', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.__init__': ('api/graph.html#graph.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.Graph._repr_markdown_': ('api/graph.html#graph._repr_markdown_', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.add_edge': ('api/graph.html#graph.add_edge', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.add_node': ('api/graph.html#graph.add_node', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.component_type': ('api/graph.html#graph.component_type', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.connect_edge_to_graph_port': ( 'api/graph.html#graph.connect_edge_to_graph_port',
                                                                               'fbdev/graph.py'),
                             'fbdev.graph.Graph.connect_edge_to_node': ('api/graph.html#graph.connect_edge_to_node', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.connect_node_to_graph_port': ( 'api/graph.html#graph.connect_node_to_graph_port',
                                                                               'fbdev/graph.py'),
                             'fbdev.graph.Graph.connect_nodes': ('api/graph.html#graph.connect_nodes', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.copy': ('api/graph.html#graph.copy', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.disconnect_edge_from_graph_port': ( 'api/graph.html#graph.disconnect_edge_from_graph_port',
                                                                                    'fbdev/graph.py'),
                             'fbdev.graph.Graph.disconnect_edge_from_node': ( 'api/graph.html#graph.disconnect_edge_from_node',
                                                                              'fbdev/graph.py'),
                             'fbdev.graph.Graph.display_mermaid': ('api/graph.html#graph.display_mermaid', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.edge_to_head_connections': ( 'api/graph.html#graph.edge_to_head_connections',
                                                                             'fbdev/graph.py'),
                             'fbdev.graph.Graph.edge_to_tail_connections': ( 'api/graph.html#graph.edge_to_tail_connections',
                                                                             'fbdev/graph.py'),
                             'fbdev.graph.Graph.edges': ('api/graph.html#graph.edges', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.get_by_address': ('api/graph.html#graph.get_by_address', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.graph_head_connections': ('api/graph.html#graph.graph_head_connections', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.graph_tail_connections': ('api/graph.html#graph.graph_tail_connections', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.head_connections': ('api/graph.html#graph.head_connections', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.internal_port_connections': ( 'api/graph.html#graph.internal_port_connections',
                                                                              'fbdev/graph.py'),
                             'fbdev.graph.Graph.is_DAG': ('api/graph.html#graph.is_dag', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.nodes': ('api/graph.html#graph.nodes', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.port_specs': ('api/graph.html#graph.port_specs', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.remove_edge': ('api/graph.html#graph.remove_edge', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.remove_node': ('api/graph.html#graph.remove_node', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.tail_connections': ('api/graph.html#graph.tail_connections', 'fbdev/graph.py'),
                             'fbdev.graph.Graph.to_mermaid': ('api/graph.html#graph.to_mermaid', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec': ('api/graph.html#nodespec', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.__init__': ('api/graph.html#nodespec.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.component_name': ('api/graph.html#nodespec.component_name', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.component_type': ('api/graph.html#nodespec.component_type', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.contains_graph': ('api/graph.html#nodespec.contains_graph', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.copy': ('api/graph.html#nodespec.copy', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.id': ('api/graph.html#nodespec.id', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.port_specs': ('api/graph.html#nodespec.port_specs', 'fbdev/graph.py'),
                             'fbdev.graph.NodeSpec.rich_id': ('api/graph.html#nodespec.rich_id', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph': ('api/graph.html#readonlygraph', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.__init__': ('api/graph.html#readonlygraph.__init__', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph._repr_markdown_': ( 'api/graph.html#readonlygraph._repr_markdown_',
                                                                            'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.copy': ('api/graph.html#readonlygraph.copy', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.display_mermaid': ( 'api/graph.html#readonlygraph.display_mermaid',
                                                                            'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.edge_to_head_connections': ( 'api/graph.html#readonlygraph.edge_to_head_connections',
                                                                                     'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.edge_to_tail_connections': ( 'api/graph.html#readonlygraph.edge_to_tail_connections',
                                                                                     'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.edges': ('api/graph.html#readonlygraph.edges', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.graph_head_connections': ( 'api/graph.html#readonlygraph.graph_head_connections',
                                                                                   'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.graph_tail_connections': ( 'api/graph.html#readonlygraph.graph_tail_connections',
                                                                                   'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.head_connections': ( 'api/graph.html#readonlygraph.head_connections',
                                                                             'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.is_DAG': ('api/graph.html#readonlygraph.is_dag', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.nodes': ('api/graph.html#readonlygraph.nodes', 'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.tail_connections': ( 'api/graph.html#readonlygraph.tail_connections',
                                                                             'fbdev/graph.py'),
                             'fbdev.graph.ReadonlyGraph.to_mermaid': ('api/graph.html#readonlygraph.to_mermaid', 'fbdev/graph.py')},
            'fbdev.node': { 'fbdev.node.Edge': ('api/node.html#edge', 'fbdev/node.py'),
                            'fbdev.node.Edge.__init__': ('api/node.html#edge.__init__', 'fbdev/node.py'),
                            'fbdev.node.Edge._load': ('api/node.html#edge._load', 'fbdev/node.py'),
                            'fbdev.node.Edge._load_left': ('api/node.html#edge._load_left', 'fbdev/node.py'),
                            'fbdev.node.Edge._unload': ('api/node.html#edge._unload', 'fbdev/node.py'),
                            'fbdev.node.Edge._unload_all': ('api/node.html#edge._unload_all', 'fbdev/node.py'),
                            'fbdev.node.Edge._unload_right': ('api/node.html#edge._unload_right', 'fbdev/node.py'),
                            'fbdev.node.Edge._update_status_events': ('api/node.html#edge._update_status_events', 'fbdev/node.py'),
                            'fbdev.node.Edge.edge_spec': ('api/node.html#edge.edge_spec', 'fbdev/node.py'),
                            'fbdev.node.Edge.events': ('api/node.html#edge.events', 'fbdev/node.py'),
                            'fbdev.node.Edge.finite_maxsize': ('api/node.html#edge.finite_maxsize', 'fbdev/node.py'),
                            'fbdev.node.Edge.head_connection': ('api/node.html#edge.head_connection', 'fbdev/node.py'),
                            'fbdev.node.Edge.id': ('api/node.html#edge.id', 'fbdev/node.py'),
                            'fbdev.node.Edge.maxsize': ('api/node.html#edge.maxsize', 'fbdev/node.py'),
                            'fbdev.node.Edge.num_packets': ('api/node.html#edge.num_packets', 'fbdev/node.py'),
                            'fbdev.node.Edge.parent': ('api/node.html#edge.parent', 'fbdev/node.py'),
                            'fbdev.node.Edge.parent_graph_process': ('api/node.html#edge.parent_graph_process', 'fbdev/node.py'),
                            'fbdev.node.Edge.rich_id': ('api/node.html#edge.rich_id', 'fbdev/node.py'),
                            'fbdev.node.Edge.states': ('api/node.html#edge.states', 'fbdev/node.py'),
                            'fbdev.node.Edge.tail_connection': ('api/node.html#edge.tail_connection', 'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory': ('api/node.html#graphcomponentfactory', 'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.__init__': ('api/node.html#graphcomponentfactory.__init__', 'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory._forward_config_into_graph': ( 'api/node.html#graphcomponentfactory._forward_config_into_graph',
                                                                                             'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory._handle_child_node_exception': ( 'api/node.html#graphcomponentfactory._handle_child_node_exception',
                                                                                               'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory._handle_graph_in_port': ( 'api/node.html#graphcomponentfactory._handle_graph_in_port',
                                                                                        'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory._handle_graph_out_port': ( 'api/node.html#graphcomponentfactory._handle_graph_out_port',
                                                                                         'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.destroy': ('api/node.html#graphcomponentfactory.destroy', 'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.edges': ('api/node.html#graphcomponentfactory.edges', 'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.execute': ('api/node.html#graphcomponentfactory.execute', 'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.get_component': ( 'api/node.html#graphcomponentfactory.get_component',
                                                                                'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.nodes': ('api/node.html#graphcomponentfactory.nodes', 'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.set_config': ( 'api/node.html#graphcomponentfactory.set_config',
                                                                             'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.start_background_tasks': ( 'api/node.html#graphcomponentfactory.start_background_tasks',
                                                                                         'fbdev/node.py'),
                            'fbdev.node.GraphComponentFactory.stop_background_tasks': ( 'api/node.html#graphcomponentfactory.stop_background_tasks',
                                                                                        'fbdev/node.py'),
                            'fbdev.node.Node': ('api/node.html#node', 'fbdev/node.py'),
                            'fbdev.node.Node.__init__': ('api/node.html#node.__init__', 'fbdev/node.py'),
                            'fbdev.node.Node._execute_with_exception_monitoring': ( 'api/node.html#node._execute_with_exception_monitoring',
                                                                                    'fbdev/node.py'),
                            'fbdev.node.Node._handle_component_config': ('api/node.html#node._handle_component_config', 'fbdev/node.py'),
                            'fbdev.node.Node._handle_component_process_exception': ( 'api/node.html#node._handle_component_process_exception',
                                                                                     'fbdev/node.py'),
                            'fbdev.node.Node._handle_in_edge_port_connection': ( 'api/node.html#node._handle_in_edge_port_connection',
                                                                                 'fbdev/node.py'),
                            'fbdev.node.Node._handle_out_edge_port_connection': ( 'api/node.html#node._handle_out_edge_port_connection',
                                                                                  'fbdev/node.py'),
                            'fbdev.node.Node._run': ('api/node.html#node._run', 'fbdev/node.py'),
                            'fbdev.node.Node._start_config_handler': ('api/node.html#node._start_config_handler', 'fbdev/node.py'),
                            'fbdev.node.Node._start_edge_bus': ('api/node.html#node._start_edge_bus', 'fbdev/node.py'),
                            'fbdev.node.Node._stop_config_handler': ('api/node.html#node._stop_config_handler', 'fbdev/node.py'),
                            'fbdev.node.Node._stop_edge_bus': ('api/node.html#node._stop_edge_bus', 'fbdev/node.py'),
                            'fbdev.node.Node.adjacent_edges': ('api/node.html#node.adjacent_edges', 'fbdev/node.py'),
                            'fbdev.node.Node.async_stop': ('api/node.html#node.async_stop', 'fbdev/node.py'),
                            'fbdev.node.Node.component_process': ('api/node.html#node.component_process', 'fbdev/node.py'),
                            'fbdev.node.Node.component_type': ('api/node.html#node.component_type', 'fbdev/node.py'),
                            'fbdev.node.Node.destroy': ('api/node.html#node.destroy', 'fbdev/node.py'),
                            'fbdev.node.Node.events': ('api/node.html#node.events', 'fbdev/node.py'),
                            'fbdev.node.Node.id': ('api/node.html#node.id', 'fbdev/node.py'),
                            'fbdev.node.Node.incoming_edges': ('api/node.html#node.incoming_edges', 'fbdev/node.py'),
                            'fbdev.node.Node.initialise': ('api/node.html#node.initialise', 'fbdev/node.py'),
                            'fbdev.node.Node.is_net': ('api/node.html#node.is_net', 'fbdev/node.py'),
                            'fbdev.node.Node.node_spec': ('api/node.html#node.node_spec', 'fbdev/node.py'),
                            'fbdev.node.Node.outgoing_edges': ('api/node.html#node.outgoing_edges', 'fbdev/node.py'),
                            'fbdev.node.Node.packet_handler': ('api/node.html#node.packet_handler', 'fbdev/node.py'),
                            'fbdev.node.Node.packet_registry': ('api/node.html#node.packet_registry', 'fbdev/node.py'),
                            'fbdev.node.Node.parent': ('api/node.html#node.parent', 'fbdev/node.py'),
                            'fbdev.node.Node.parent_graph_process': ('api/node.html#node.parent_graph_process', 'fbdev/node.py'),
                            'fbdev.node.Node.port_specs': ('api/node.html#node.port_specs', 'fbdev/node.py'),
                            'fbdev.node.Node.ports': ('api/node.html#node.ports', 'fbdev/node.py'),
                            'fbdev.node.Node.receive_output': ('api/node.html#node.receive_output', 'fbdev/node.py'),
                            'fbdev.node.Node.reset': ('api/node.html#node.reset', 'fbdev/node.py'),
                            'fbdev.node.Node.rich_id': ('api/node.html#node.rich_id', 'fbdev/node.py'),
                            'fbdev.node.Node.run': ('api/node.html#node.run', 'fbdev/node.py'),
                            'fbdev.node.Node.send_input': ('api/node.html#node.send_input', 'fbdev/node.py'),
                            'fbdev.node.Node.states': ('api/node.html#node.states', 'fbdev/node.py'),
                            'fbdev.node.Node.stop': ('api/node.html#node.stop', 'fbdev/node.py')},
            'fbdev.packet': { 'fbdev.packet.NullPayload': ('api/packet.html#nullpayload', 'fbdev/packet.py'),
                              'fbdev.packet.NullPayload.__new__': ('api/packet.html#nullpayload.__new__', 'fbdev/packet.py'),
                              'fbdev.packet.NullPayload.__repr__': ('api/packet.html#nullpayload.__repr__', 'fbdev/packet.py'),
                              'fbdev.packet.Packet': ('api/packet.html#packet', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.__init__': ('api/packet.html#packet.__init__', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.dtype': ('api/packet.html#packet.dtype', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.get_deep_copy': ('api/packet.html#packet.get_deep_copy', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.id': ('api/packet.html#packet.id', 'fbdev/packet.py'),
                              'fbdev.packet.Packet.is_empty': ('api/packet.html#packet.is_empty', 'fbdev/packet.py'),
                              'fbdev.packet.PacketActivity': ('api/packet.html#packetactivity', 'fbdev/packet.py'),
                              'fbdev.packet.PacketActivity.__init__': ('api/packet.html#packetactivity.__init__', 'fbdev/packet.py'),
                              'fbdev.packet.PacketCreation': ('api/packet.html#packetcreation', 'fbdev/packet.py'),
                              'fbdev.packet.PacketCreation.__init__': ('api/packet.html#packetcreation.__init__', 'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler': ('api/packet.html#packethandler', 'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler.__init__': ('api/packet.html#packethandler.__init__', 'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler._consume': ('api/packet.html#packethandler._consume', 'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler._create': ('api/packet.html#packethandler._create', 'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler._create_empty': ( 'api/packet.html#packethandler._create_empty',
                                                                            'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler._register_move': ( 'api/packet.html#packethandler._register_move',
                                                                             'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler._verify_location': ( 'api/packet.html#packethandler._verify_location',
                                                                               'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler.is_consumed': ('api/packet.html#packethandler.is_consumed', 'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler.peek': ('api/packet.html#packethandler.peek', 'fbdev/packet.py'),
                              'fbdev.packet.PacketHandler.registry': ('api/packet.html#packethandler.registry', 'fbdev/packet.py'),
                              'fbdev.packet.PacketMovement': ('api/packet.html#packetmovement', 'fbdev/packet.py'),
                              'fbdev.packet.PacketMovement.__init__': ('api/packet.html#packetmovement.__init__', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry': ('api/packet.html#packetregistry', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry.__init__': ('api/packet.html#packetregistry.__init__', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry._consume': ('api/packet.html#packetregistry._consume', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry._create': ('api/packet.html#packetregistry._create', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry._create_empty': ( 'api/packet.html#packetregistry._create_empty',
                                                                             'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry._peek': ('api/packet.html#packetregistry._peek', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry._register_move': ( 'api/packet.html#packetregistry._register_move',
                                                                              'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry.consumed_packets': ( 'api/packet.html#packetregistry.consumed_packets',
                                                                                'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry.history': ('api/packet.html#packetregistry.history', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry.is_consumed': ('api/packet.html#packetregistry.is_consumed', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry.is_registered': ( 'api/packet.html#packetregistry.is_registered',
                                                                             'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry.locations': ('api/packet.html#packetregistry.locations', 'fbdev/packet.py'),
                              'fbdev.packet.PacketRegistry.packets': ('api/packet.html#packetregistry.packets', 'fbdev/packet.py')},
            'fbdev.port': { 'fbdev.port.BasePort': ('api/port.html#baseport', 'fbdev/port.py'),
                            'fbdev.port.BasePort.__init__': ('api/port.html#baseport.__init__', 'fbdev/port.py'),
                            'fbdev.port.BasePort.__repr__': ('api/port.html#baseport.__repr__', 'fbdev/port.py'),
                            'fbdev.port.BasePort.__str__': ('api/port.html#baseport.__str__', 'fbdev/port.py'),
                            'fbdev.port.BasePort._validate_packet': ('api/port.html#baseport._validate_packet', 'fbdev/port.py'),
                            'fbdev.port.BasePort._validate_packet_dtype': ( 'api/port.html#baseport._validate_packet_dtype',
                                                                            'fbdev/port.py'),
                            'fbdev.port.BasePort.data_validator': ('api/port.html#baseport.data_validator', 'fbdev/port.py'),
                            'fbdev.port.BasePort.dtype': ('api/port.html#baseport.dtype', 'fbdev/port.py'),
                            'fbdev.port.BasePort.idx': ('api/port.html#baseport.idx', 'fbdev/port.py'),
                            'fbdev.port.BasePort.name': ('api/port.html#baseport.name', 'fbdev/port.py'),
                            'fbdev.port.BasePort.parent_process': ('api/port.html#baseport.parent_process', 'fbdev/port.py'),
                            'fbdev.port.BasePort.port_type': ('api/port.html#baseport.port_type', 'fbdev/port.py'),
                            'fbdev.port.ConfigPort': ('api/port.html#configport', 'fbdev/port.py'),
                            'fbdev.port.ConfigPort.__init__': ('api/port.html#configport.__init__', 'fbdev/port.py'),
                            'fbdev.port.ConfigPort._receive': ('api/port.html#configport._receive', 'fbdev/port.py'),
                            'fbdev.port.ConfigPort._receive_payload': ('api/port.html#configport._receive_payload', 'fbdev/port.py'),
                            'fbdev.port.ConfigPort.receive': ('api/port.html#configport.receive', 'fbdev/port.py'),
                            'fbdev.port.ConfigPort.receive_payload': ('api/port.html#configport.receive_payload', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec': ('api/port.html#configportspec', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.__init__': ('api/port.html#configportspec.__init__', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.copy': ('api/port.html#configportspec.copy', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.data_validator': ('api/port.html#configportspec.data_validator', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.default': ('api/port.html#configportspec.default', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.dtype': ('api/port.html#configportspec.dtype', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.has_default': ('api/port.html#configportspec.has_default', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.is_optional': ('api/port.html#configportspec.is_optional', 'fbdev/port.py'),
                            'fbdev.port.ConfigPortSpec.name': ('api/port.html#configportspec.name', 'fbdev/port.py'),
                            'fbdev.port.InputPort': ('api/port.html#inputport', 'fbdev/port.py'),
                            'fbdev.port.InputPort.__init__': ('api/port.html#inputport.__init__', 'fbdev/port.py'),
                            'fbdev.port.InputPort._load_packet': ('api/port.html#inputport._load_packet', 'fbdev/port.py'),
                            'fbdev.port.InputPort.receive': ('api/port.html#inputport.receive', 'fbdev/port.py'),
                            'fbdev.port.InputPort.receive_payload': ('api/port.html#inputport.receive_payload', 'fbdev/port.py'),
                            'fbdev.port.OutputPort': ('api/port.html#outputport', 'fbdev/port.py'),
                            'fbdev.port.OutputPort.__init__': ('api/port.html#outputport.__init__', 'fbdev/port.py'),
                            'fbdev.port.OutputPort._unload_packet': ('api/port.html#outputport._unload_packet', 'fbdev/port.py'),
                            'fbdev.port.OutputPort.put': ('api/port.html#outputport.put', 'fbdev/port.py'),
                            'fbdev.port.PortCollection': ('api/port.html#portcollection', 'fbdev/port.py'),
                            'fbdev.port.PortCollection.__init__': ('api/port.html#portcollection.__init__', 'fbdev/port.py'),
                            'fbdev.port.PortCollection.__iter__': ('api/port.html#portcollection.__iter__', 'fbdev/port.py'),
                            'fbdev.port.PortCollection.__repr__': ('api/port.html#portcollection.__repr__', 'fbdev/port.py'),
                            'fbdev.port.PortCollection.__str__': ('api/port.html#portcollection.__str__', 'fbdev/port.py'),
                            'fbdev.port.PortCollection._attach_ports': ('api/port.html#portcollection._attach_ports', 'fbdev/port.py'),
                            'fbdev.port.PortSpec': ('api/port.html#portspec', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.__init__': ('api/port.html#portspec.__init__', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.__repr__': ('api/port.html#portspec.__repr__', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.__str__': ('api/port.html#portspec.__str__', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.copy': ('api/port.html#portspec.copy', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.data_validator': ('api/port.html#portspec.data_validator', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.dtype': ('api/port.html#portspec.dtype', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.has_data_validator': ('api/port.html#portspec.has_data_validator', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.has_dtype': ('api/port.html#portspec.has_dtype', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.is_input_port': ('api/port.html#portspec.is_input_port', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.name': ('api/port.html#portspec.name', 'fbdev/port.py'),
                            'fbdev.port.PortSpec.port_type': ('api/port.html#portspec.port_type', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection': ('api/port.html#portspeccollection', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.__contains__': ( 'api/port.html#portspeccollection.__contains__',
                                                                            'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.__getitem__': ('api/port.html#portspeccollection.__getitem__', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.__init__': ('api/port.html#portspeccollection.__init__', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.__iter__': ('api/port.html#portspeccollection.__iter__', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.__repr__': ('api/port.html#portspeccollection.__repr__', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.__str__': ('api/port.html#portspeccollection.__str__', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.config': ('api/port.html#portspeccollection.config', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.copy': ('api/port.html#portspeccollection.copy', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.get_port_names': ( 'api/port.html#portspeccollection.get_port_names',
                                                                              'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.input': ('api/port.html#portspeccollection.input', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.iter_ports': ('api/port.html#portspeccollection.iter_ports', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.output': ('api/port.html#portspeccollection.output', 'fbdev/port.py'),
                            'fbdev.port.PortSpecCollection.signal': ('api/port.html#portspeccollection.signal', 'fbdev/port.py'),
                            'fbdev.port.PortType': ('api/port.html#porttype', 'fbdev/port.py'),
                            'fbdev.port.PortType.__init__': ('api/port.html#porttype.__init__', 'fbdev/port.py'),
                            'fbdev.port.PortType.get': ('api/port.html#porttype.get', 'fbdev/port.py'),
                            'fbdev.port.PortType.is_input_port': ('api/port.html#porttype.is_input_port', 'fbdev/port.py'),
                            'fbdev.port.PortType.label': ('api/port.html#porttype.label', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec': ('api/port.html#porttypespec', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec.__init__': ('api/port.html#porttypespec.__init__', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec.__repr__': ('api/port.html#porttypespec.__repr__', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec.__str__': ('api/port.html#porttypespec.__str__', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec._add_port': ('api/port.html#porttypespec._add_port', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec._initialise': ('api/port.html#porttypespec._initialise', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec.copy': ('api/port.html#porttypespec.copy', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec.is_input_port': ('api/port.html#porttypespec.is_input_port', 'fbdev/port.py'),
                            'fbdev.port.PortTypeSpec.port_type': ('api/port.html#porttypespec.port_type', 'fbdev/port.py')},
            'fbdev.runtime': { 'fbdev.runtime.BatchExecutor': ('api/runtime.html#batchexecutor', 'fbdev/runtime.py'),
                               'fbdev.runtime.BatchExecutor.__del__': ('api/runtime.html#batchexecutor.__del__', 'fbdev/runtime.py'),
                               'fbdev.runtime.BatchExecutor.__init__': ('api/runtime.html#batchexecutor.__init__', 'fbdev/runtime.py'),
                               'fbdev.runtime.BatchExecutor._setup_execution_coro': ( 'api/runtime.html#batchexecutor._setup_execution_coro',
                                                                                      'fbdev/runtime.py'),
                               'fbdev.runtime.BatchExecutor.async_execute': ( 'api/runtime.html#batchexecutor.async_execute',
                                                                              'fbdev/runtime.py'),
                               'fbdev.runtime.BatchExecutor.destroy': ('api/runtime.html#batchexecutor.destroy', 'fbdev/runtime.py'),
                               'fbdev.runtime.BatchExecutor.execute': ('api/runtime.html#batchexecutor.execute', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime': ('api/runtime.html#netruntime', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.__aenter__': ('api/runtime.html#netruntime.__aenter__', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.__aexit__': ('api/runtime.html#netruntime.__aexit__', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.__enter__': ('api/runtime.html#netruntime.__enter__', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.__exit__': ('api/runtime.html#netruntime.__exit__', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.async_execute': ('api/runtime.html#netruntime.async_execute', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.async_execute_graph': ( 'api/runtime.html#netruntime.async_execute_graph',
                                                                                 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.destroy': ('api/runtime.html#netruntime.destroy', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.execute': ('api/runtime.html#netruntime.execute', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.execute_graph': ('api/runtime.html#netruntime.execute_graph', 'fbdev/runtime.py'),
                               'fbdev.runtime.NetRuntime.from_graph': ('api/runtime.html#netruntime.from_graph', 'fbdev/runtime.py')},
            'fbdev.utils': { 'fbdev.utils.AddressableMixin': ('api/utils.html#addressablemixin', 'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.__init_subclass__': ( 'api/utils.html#addressablemixin.__init_subclass__',
                                                                                 'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.address': ('api/utils.html#addressablemixin.address', 'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.id': ('api/utils.html#addressablemixin.id', 'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.iter_address': ( 'api/utils.html#addressablemixin.iter_address',
                                                                            'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.parent': ('api/utils.html#addressablemixin.parent', 'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.rich_address': ( 'api/utils.html#addressablemixin.rich_address',
                                                                            'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.rich_id': ('api/utils.html#addressablemixin.rich_id', 'fbdev/utils.py'),
                             'fbdev.utils.AddressableMixin.validate_id': ('api/utils.html#addressablemixin.validate_id', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer': ('api/utils.html#attrcontainer', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__contains__': ('api/utils.html#attrcontainer.__contains__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__getattr__': ('api/utils.html#attrcontainer.__getattr__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__getitem__': ('api/utils.html#attrcontainer.__getitem__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__init__': ('api/utils.html#attrcontainer.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__iter__': ('api/utils.html#attrcontainer.__iter__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__len__': ('api/utils.html#attrcontainer.__len__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.__str__': ('api/utils.html#attrcontainer.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer._set': ('api/utils.html#attrcontainer._set', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.as_list': ('api/utils.html#attrcontainer.as_list', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.as_readonly_dict': ( 'api/utils.html#attrcontainer.as_readonly_dict',
                                                                             'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.copy': ('api/utils.html#attrcontainer.copy', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.items': ('api/utils.html#attrcontainer.items', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.keys': ('api/utils.html#attrcontainer.keys', 'fbdev/utils.py'),
                             'fbdev.utils.AttrContainer.values': ('api/utils.html#attrcontainer.values', 'fbdev/utils.py'),
                             'fbdev.utils.EventCollection': ('api/utils.html#eventcollection', 'fbdev/utils.py'),
                             'fbdev.utils.EventCollection.__init__': ('api/utils.html#eventcollection.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.EventCollection._add_event': ('api/utils.html#eventcollection._add_event', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler': ('api/utils.html#eventhandler', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.__init__': ('api/utils.html#eventhandler.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.__repr__': ('api/utils.html#eventhandler.__repr__', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.__str__': ('api/utils.html#eventhandler.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler._trigger': ('api/utils.html#eventhandler._trigger', 'fbdev/utils.py'),
                             'fbdev.utils.EventHandler.subscribe': ('api/utils.html#eventhandler.subscribe', 'fbdev/utils.py'),
                             'fbdev.utils.ReadonlyEvent': ('api/utils.html#readonlyevent', 'fbdev/utils.py'),
                             'fbdev.utils.ReadonlyEvent.__init__': ('api/utils.html#readonlyevent.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.ReadonlyEvent.is_set': ('api/utils.html#readonlyevent.is_set', 'fbdev/utils.py'),
                             'fbdev.utils.ReadonlyEvent.wait': ('api/utils.html#readonlyevent.wait', 'fbdev/utils.py'),
                             'fbdev.utils.StateCollection': ('api/utils.html#statecollection', 'fbdev/utils.py'),
                             'fbdev.utils.StateCollection.__init__': ('api/utils.html#statecollection.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.StateCollection._add_state': ('api/utils.html#statecollection._add_state', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler': ('api/utils.html#statehandler', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__event_func': ('api/utils.html#statehandler.__event_func', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__init__': ('api/utils.html#statehandler.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__repr__': ('api/utils.html#statehandler.__repr__', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.__str__': ('api/utils.html#statehandler.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.check': ('api/utils.html#statehandler.check', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.get': ('api/utils.html#statehandler.get', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.get_state_event': ('api/utils.html#statehandler.get_state_event', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.get_state_toggle_event': ( 'api/utils.html#statehandler.get_state_toggle_event',
                                                                                  'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.set': ('api/utils.html#statehandler.set', 'fbdev/utils.py'),
                             'fbdev.utils.StateHandler.wait': ('api/utils.html#statehandler.wait', 'fbdev/utils.py'),
                             'fbdev.utils.StateView': ('api/utils.html#stateview', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.__init__': ('api/utils.html#stateview.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.__repr__': ('api/utils.html#stateview.__repr__', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.__str__': ('api/utils.html#stateview.__str__', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.check': ('api/utils.html#stateview.check', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.get': ('api/utils.html#stateview.get', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.get_state_event': ('api/utils.html#stateview.get_state_event', 'fbdev/utils.py'),
                             'fbdev.utils.StateView.get_state_toggle_event': ( 'api/utils.html#stateview.get_state_toggle_event',
                                                                               'fbdev/utils.py'),
                             'fbdev.utils.StateView.wait': ('api/utils.html#stateview.wait', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager': ('api/utils.html#taskmanager', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.__init__': ('api/utils.html#taskmanager.__init__', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager._monitor_tasks': ('api/utils.html#taskmanager._monitor_tasks', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.cancel': ('api/utils.html#taskmanager.cancel', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.cancel_wait': ('api/utils.html#taskmanager.cancel_wait', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.create_task': ('api/utils.html#taskmanager.create_task', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.destroy': ('api/utils.html#taskmanager.destroy', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.exception_occured': ( 'api/utils.html#taskmanager.exception_occured',
                                                                            'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.get_exceptions': ('api/utils.html#taskmanager.get_exceptions', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.get_task_coro_qualnames': ( 'api/utils.html#taskmanager.get_task_coro_qualnames',
                                                                                  'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.is_cancelled': ('api/utils.html#taskmanager.is_cancelled', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.stop': ('api/utils.html#taskmanager.stop', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.submit_exception': ('api/utils.html#taskmanager.submit_exception', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.subscribe': ('api/utils.html#taskmanager.subscribe', 'fbdev/utils.py'),
                             'fbdev.utils.TaskManager.wait_for_exceptions': ( 'api/utils.html#taskmanager.wait_for_exceptions',
                                                                              'fbdev/utils.py'),
                             'fbdev.utils.await_any_event': ('api/utils.html#await_any_event', 'fbdev/utils.py'),
                             'fbdev.utils.await_multiple_events': ('api/utils.html#await_multiple_events', 'fbdev/utils.py'),
                             'fbdev.utils.extract_top_level_docstring': ('api/utils.html#extract_top_level_docstring', 'fbdev/utils.py'),
                             'fbdev.utils.get_function_from_py_file': ('api/utils.html#get_function_from_py_file', 'fbdev/utils.py'),
                             'fbdev.utils.get_git_root_directory': ('api/utils.html#get_git_root_directory', 'fbdev/utils.py'),
                             'fbdev.utils.is_in_event_loop': ('api/utils.html#is_in_event_loop', 'fbdev/utils.py'),
                             'fbdev.utils.is_mutually_exclusive': ('api/utils.html#is_mutually_exclusive', 'fbdev/utils.py'),
                             'fbdev.utils.root_dir': ('api/utils.html#root_dir', 'fbdev/utils.py')}}}
